{"/about":{"title":"About","data":{}},"/":{"title":"Home","data":{"":"Hey, I'm Huihui!Welcome to my corner of the Internet!I'm a Junior Software Engineer at TP-LINK. I usually use C for my work, but I have a keen interest in the front-end and am constantly experimentingThis portfolio is built with Next.js and a library called Nextra. It allows you to write Markdown and focus on the content of your portfolio.\nGitHub @jiahuiPaung\nEmail jiahuipaung@gmail.com"}},"/posts/C++":{"title":"C++","data":{"语言#语言":"","模板#模板":"包括函数模板和类模板，均使用泛型参数；使用不同参数进行实例化时包括显式和隐式\n显式实例化：在函数名后的<>中指定模板参数的实际类型。同时，模板可以支持多个模板参数。\n模板参数匹配原则：\n一个非模板函数可以和一个同名的函数模板同时存在，而且该函数模板还可以被实例化为这个非模板函数。但可以通过显式实例化，走模板函数。\n对于非模板函数和同名函数模板，如果其他条件都相同，在调动时会优先调用非模板函数而不会从该模板产生出一个实例。如果模板可以产生一个具有更好匹配的函数， 那么将选择模板。","网络#网络":"","项目tinywebserver#项目：TinyWebServer":"","线程池#线程池":"涉及线程、锁机制。使用一个循环队列将主线程和工作线程解耦：主线程往工作队列中插入任务，工作线程通过竞争来取得任务并执行它。\n通俗地说，主线程A的工作内容是accept新的客户端连接并生成fd，工作进程B1/2/3来处理工作线程下发单个连接的IO时间。","同步异步日志系统#同步/异步日志系统":"涉及设计模式，自定义阻塞队列。主要涉及两个模块：日志的定义和使用、单例模式与阻塞队列的定义。\n日志由服务器自动创建，并记录运行状态、错误信息、数据访问信息；\n同步日志：写入函数与工作线程串行执行，由于涉及IO，当单条日志较长时，同步模式会阻塞整个处理流程，服务器错=所能处理的并发能力有所下降。\n阻塞队列：将生产者-消费者模型进行封装，使用循环数组实现队列，作为二者共享缓存区。\n异步日志：将所写日志内容先存入阻塞队列，写线程从阻塞队列取出内容，写入日志。\n单例模式：保证一个类只创建一个实例，同时提供全局访问的方法。\n实现思路：私有化它的构造函数，以防止外界创建单例类的对象；使用类的私有静态指针变量指向类的唯一实例，并用一个公有的静态方法获取该实例。\n有两种实现方法，分别是懒汉和饿汉模式。顾名思义，懒汉模式，即非常懒，不用的时候不去初始化，所以在第一次被使用时才进行初始化；饿汉模式，即迫不及待，在程序运行时立即初始化。","项目kv存储器#项目：KV存储器":""}},"/posts":{"title":"Posts","data":{}},"/posts/markdown":{"title":"Markdown Examples","data":{"h2-heading#h2 Heading":"","h3-heading#h3 Heading":"","h4-heading#h4 Heading":"","h5-heading#h5 Heading":"","h6-heading#h6 Heading":"","emphasis#Emphasis":"This is bold textThis is italic textStrikethrough","blockquotes#Blockquotes":"Develop. Preview. Ship. – Vercel","lists#Lists":"Unordered\nLorem ipsum dolor sit amet\nConsectetur adipiscing elit\nInteger molestie lorem at massa\nOrdered\nLorem ipsum dolor sit amet\nConsectetur adipiscing elit\nInteger molestie lorem at massa","code#Code":"Inline code\nexport default function Nextra({ Component, pageProps }) {\n  return (\n    <>\n      <Head>\n        <link\n          rel=\"alternate\"\n          type=\"application/rss+xml\"\n          title=\"RSS\"\n          href=\"/feed.xml\"\n        />\n        <link\n          rel=\"preload\"\n          href=\"/fonts/Inter-roman.latin.var.woff2\"\n          as=\"font\"\n          type=\"font/woff2\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n      <Component {...pageProps} />\n    </>\n  )\n}","tables#Tables":"Option\tDescription\tFirst\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\tSecond\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\tThird\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.","links#Links":"Next.js\nNextra\nVercel","footnotes#Footnotes":"Footnote .\nFootnote .\nFootnote can have markupand multiple paragraphs.Footnote text."}},"/tags/[tag]":{"title":"Tagged Posts","data":{}}}